{"ast":null,"code":"var _jsxFileName = \"/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/league/League.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { Container, Table, Row } from 'react-bootstrap';\nimport axios from 'axios';\n\n// Fetch league data from API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchLeagueData = async () => {\n  const {\n    data\n  } = await axios.get('http://localhost:5000/league');\n  return data.data;\n};\nconst League = () => {\n  _s();\n  const {\n    data,\n    isLoading,\n    error\n  } = useQuery({\n    queryKey: ['leagueData'],\n    queryFn: fetchLeagueData\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error fetching league data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n  const leagueData = data;\n  const getFirstName = name => name.split(' ')[0];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"text-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Grand Champion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: getFirstName(leagueData.grandChampion.name)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        borderless: true,\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: leagueData.champions.map(champion => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: champion.region\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 37\n              }, this)\n            }, champion.region, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: leagueData.champions.map(champion => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: getFirstName(champion.name)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 37\n              }, this)\n            }, champion.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: leagueData.eliteFour.map(eliteGroup => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-unstyled\",\n                children: eliteGroup.eliteFour.map(member => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: getFirstName(member.name)\n                }, member.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this)\n            }, eliteGroup.region, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(League, \"Z3b93vmhJEnCPN4ovcxRGbOtffM=\", false, function () {\n  return [useQuery];\n});\n_c = League;\nexport default League;\nvar _c;\n$RefreshReg$(_c, \"League\");","map":{"version":3,"names":["React","useQuery","Container","Table","Row","axios","jsxDEV","_jsxDEV","fetchLeagueData","data","get","League","_s","isLoading","error","queryKey","queryFn","children","fileName","_jsxFileName","lineNumber","columnNumber","leagueData","getFirstName","name","split","className","grandChampion","borderless","champions","map","champion","region","id","eliteFour","eliteGroup","member","_c","$RefreshReg$"],"sources":["/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/league/League.tsx"],"sourcesContent":["import React from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport { Container, Table, Row, Col } from 'react-bootstrap';\nimport { LeagueData } from './leaguetypes';\nimport axios from 'axios';\n\n// Fetch league data from API\nconst fetchLeagueData = async (): Promise<LeagueData> => {\n    const { data } = await axios.get('http://localhost:5000/league');\n    return data.data;\n};\n\nconst League: React.FC = () => {\n    const { data, isLoading, error } = useQuery({\n        queryKey: ['leagueData'],\n        queryFn: fetchLeagueData\n    });\n\n    if (isLoading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div>Error fetching league data</div>;\n    }\n\n    const leagueData = data as LeagueData;\n\n    const getFirstName = (name: string) => name.split(' ')[0];\n\n    return (\n        <Container>\n            {/* Display Grand Champion */}\n            <Row className=\"text-center mb-4\">\n                <h2>Grand Champion</h2>\n                <h3>{getFirstName(leagueData.grandChampion.name)}</h3>\n            </Row>\n\n            {/* Display League Table */}\n            <Row>\n                <Table borderless className=\"text-center\">\n                    <thead>\n                        <tr>\n                            {leagueData.champions.map((champion) => (\n                                <th key={champion.region}>\n                                    <h4>{champion.region}</h4>\n                                </th>\n                            ))}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {/* Display Champions */}\n                        <tr>\n                            {leagueData.champions.map((champion) => (\n                                <td key={champion.id}>\n                                    <strong>{getFirstName(champion.name)}</strong>\n                                </td>\n                            ))}\n                        </tr>\n\n                        {/* Display Elite Four */}\n                        <tr>\n                            {leagueData.eliteFour.map((eliteGroup) => (\n                                <td key={eliteGroup.region}>\n                                    <ul className=\"list-unstyled\">\n                                        {eliteGroup.eliteFour.map((member) => (\n                                            <li key={member.id}>{getFirstName(member.name)}</li>\n                                        ))}\n                                    </ul>\n                                </td>\n                            ))}\n                        </tr>\n                    </tbody>\n                </Table>\n            </Row>\n        </Container>\n    );\n};\n\nexport default League;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}