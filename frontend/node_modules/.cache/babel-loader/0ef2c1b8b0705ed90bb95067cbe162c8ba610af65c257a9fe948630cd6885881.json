{"ast":null,"code":"var _jsxFileName = \"/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/pokedex/PokemonDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Container, Tabs, Tab } from 'react-bootstrap';\nimport PokemonBasicInfo from './PokemonBasicInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [pokemon, setPokemon] = useState(null);\n  const [selectedForm, setSelectedForm] = useState(0);\n  useEffect(() => {\n    const fetchPokemonDetails = async () => {\n      try {\n        const speciesResponse = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${id}/`);\n        const speciesData = speciesResponse.data;\n        const nationalDexNumber = speciesData.pokedex_numbers.find(entry => entry.pokedex.name === 'national').entry_number;\n        const generation = speciesData.generation.name.replace('generation-', 'Generation ').toUpperCase();\n        const genus = speciesData.genera.find(entry => entry.language.name === 'en').genus;\n        const formsData = await Promise.all(speciesData.varieties.map(async variety => {\n          const formResponse = await axios.get(variety.pokemon.url);\n          const formData = formResponse.data;\n          return {\n            id: formData.id,\n            name: formData.name,\n            abilities: formData.abilities.map(ability => ({\n              name: ability.ability.name,\n              is_hidden: ability.is_hidden\n            })),\n            height: formData.height / 10,\n            // Convert decimeters to meters\n            weight: formData.weight / 10,\n            // Convert hectograms to kilograms\n            stats: formData.stats.map(stat => ({\n              name: stat.stat.name,\n              base_stat: stat.base_stat\n            })),\n            types: formData.types.map(type => ({\n              name: type.type.name\n            }))\n          };\n        }));\n        const defaultFormIndex = speciesData.varieties.findIndex(variety => variety.is_default);\n        setPokemon({\n          name: speciesData.name,\n          nationalDexNumber,\n          generation,\n          genus,\n          forms: formsData\n        });\n        setSelectedForm(defaultFormIndex);\n      } catch (error) {\n        console.error('Error fetching Pokémon details:', error);\n      }\n    };\n    fetchPokemonDetails();\n  }, [id]);\n  if (!pokemon) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1), \" - #\", String(pokemon.nationalDexNumber).padStart(3, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Generation \", pokemon.generation.split(' ')[1], \" - \", pokemon.genus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      activeKey: selectedForm,\n      onSelect: k => setSelectedForm(Number(k)),\n      className: \"mb-3\",\n      children: pokemon.forms.map((form, index) => /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: index,\n        title: form.name,\n        children: /*#__PURE__*/_jsxDEV(PokemonBasicInfo, {\n          form: form\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this)\n      }, form.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n};\n_s(PokemonDetail, \"+MaY9F0Tun8KKSO2PAM5oVM32BU=\", false, function () {\n  return [useParams];\n});\n_c = PokemonDetail;\nexport default PokemonDetail;\nvar _c;\n$RefreshReg$(_c, \"PokemonDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","Container","Tabs","Tab","PokemonBasicInfo","jsxDEV","_jsxDEV","PokemonDetail","_s","id","pokemon","setPokemon","selectedForm","setSelectedForm","fetchPokemonDetails","speciesResponse","get","speciesData","data","nationalDexNumber","pokedex_numbers","find","entry","pokedex","name","entry_number","generation","replace","toUpperCase","genus","genera","language","formsData","Promise","all","varieties","map","variety","formResponse","url","formData","abilities","ability","is_hidden","height","weight","stats","stat","base_stat","types","type","defaultFormIndex","findIndex","is_default","forms","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","slice","String","padStart","split","activeKey","onSelect","k","Number","className","form","index","eventKey","title","_c","$RefreshReg$"],"sources":["/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/pokedex/PokemonDetail.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Container, Tabs, Tab } from 'react-bootstrap';\nimport PokemonBasicInfo from './PokemonBasicInfo';\n\ninterface PokemonSpecies {\n    name: string;\n    nationalDexNumber: number;\n    generation: string;\n    genus: string;\n    forms: any[]; // Define this more specifically if needed\n}\n\nconst PokemonDetail: React.FC = () => {\n    const { id } = useParams<{ id: string }>();\n    const [pokemon, setPokemon] = useState<PokemonSpecies | null>(null);\n    const [selectedForm, setSelectedForm] = useState<number>(0);\n\n    useEffect(() => {\n        const fetchPokemonDetails = async () => {\n            try {\n                const speciesResponse = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${id}/`);\n                const speciesData = speciesResponse.data;\n\n                const nationalDexNumber = speciesData.pokedex_numbers.find((entry: any) => entry.pokedex.name === 'national').entry_number;\n                const generation = speciesData.generation.name.replace('generation-', 'Generation ').toUpperCase();\n                const genus = speciesData.genera.find((entry: any) => entry.language.name === 'en').genus;\n\n                const formsData = await Promise.all(\n                    speciesData.varieties.map(async (variety: any) => {\n                        const formResponse = await axios.get(variety.pokemon.url);\n                        const formData = formResponse.data;\n                        return {\n                            id: formData.id,\n                            name: formData.name,\n                            abilities: formData.abilities.map((ability: any) => ({\n                                name: ability.ability.name,\n                                is_hidden: ability.is_hidden,\n                            })),\n                            height: formData.height / 10, // Convert decimeters to meters\n                            weight: formData.weight / 10, // Convert hectograms to kilograms\n                            stats: formData.stats.map((stat: any) => ({\n                                name: stat.stat.name,\n                                base_stat: stat.base_stat,\n                            })),\n                            types: formData.types.map((type: any) => ({\n                                name: type.type.name,\n                            })),\n                        };\n                    })\n                );\n\n                const defaultFormIndex = speciesData.varieties.findIndex((variety: any) => variety.is_default);\n\n                setPokemon({\n                    name: speciesData.name,\n                    nationalDexNumber,\n                    generation,\n                    genus,\n                    forms: formsData,\n                });\n\n                setSelectedForm(defaultFormIndex);\n            } catch (error) {\n                console.error('Error fetching Pokémon details:', error);\n            }\n        };\n\n        fetchPokemonDetails();\n    }, [id]);\n\n    if (!pokemon) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <Container>\n            <h1>\n                {pokemon.name.charAt(0).toUpperCase() + pokemon.name.slice(1)} - #{String(pokemon.nationalDexNumber).padStart(3, '0')}\n            </h1>\n            <p>\n                Generation {pokemon.generation.split(' ')[1]} - {pokemon.genus}\n            </p>\n\n            <Tabs activeKey={selectedForm} onSelect={(k) => setSelectedForm(Number(k))} className=\"mb-3\">\n                {pokemon.forms.map((form, index) => (\n                    <Tab eventKey={index} title={form.name} key={form.id}>\n                        <PokemonBasicInfo form={form} />\n                    </Tab>\n                ))}\n            </Tabs>\n        </Container>\n    );\n};\n\nexport default PokemonDetail;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,IAAI,EAAEC,GAAG,QAAQ,iBAAiB;AACtD,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUlD,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM;IAAEC;EAAG,CAAC,GAAGV,SAAS,CAAiB,CAAC;EAC1C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAwB,IAAI,CAAC;EACnE,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAS,CAAC,CAAC;EAE3DD,SAAS,CAAC,MAAM;IACZ,MAAMiB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACA,MAAMC,eAAe,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,6CAA6CP,EAAE,GAAG,CAAC;QAC3F,MAAMQ,WAAW,GAAGF,eAAe,CAACG,IAAI;QAExC,MAAMC,iBAAiB,GAAGF,WAAW,CAACG,eAAe,CAACC,IAAI,CAAEC,KAAU,IAAKA,KAAK,CAACC,OAAO,CAACC,IAAI,KAAK,UAAU,CAAC,CAACC,YAAY;QAC1H,MAAMC,UAAU,GAAGT,WAAW,CAACS,UAAU,CAACF,IAAI,CAACG,OAAO,CAAC,aAAa,EAAE,aAAa,CAAC,CAACC,WAAW,CAAC,CAAC;QAClG,MAAMC,KAAK,GAAGZ,WAAW,CAACa,MAAM,CAACT,IAAI,CAAEC,KAAU,IAAKA,KAAK,CAACS,QAAQ,CAACP,IAAI,KAAK,IAAI,CAAC,CAACK,KAAK;QAEzF,MAAMG,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAC/BjB,WAAW,CAACkB,SAAS,CAACC,GAAG,CAAC,MAAOC,OAAY,IAAK;UAC9C,MAAMC,YAAY,GAAG,MAAMtC,KAAK,CAACgB,GAAG,CAACqB,OAAO,CAAC3B,OAAO,CAAC6B,GAAG,CAAC;UACzD,MAAMC,QAAQ,GAAGF,YAAY,CAACpB,IAAI;UAClC,OAAO;YACHT,EAAE,EAAE+B,QAAQ,CAAC/B,EAAE;YACfe,IAAI,EAAEgB,QAAQ,CAAChB,IAAI;YACnBiB,SAAS,EAAED,QAAQ,CAACC,SAAS,CAACL,GAAG,CAAEM,OAAY,KAAM;cACjDlB,IAAI,EAAEkB,OAAO,CAACA,OAAO,CAAClB,IAAI;cAC1BmB,SAAS,EAAED,OAAO,CAACC;YACvB,CAAC,CAAC,CAAC;YACHC,MAAM,EAAEJ,QAAQ,CAACI,MAAM,GAAG,EAAE;YAAE;YAC9BC,MAAM,EAAEL,QAAQ,CAACK,MAAM,GAAG,EAAE;YAAE;YAC9BC,KAAK,EAAEN,QAAQ,CAACM,KAAK,CAACV,GAAG,CAAEW,IAAS,KAAM;cACtCvB,IAAI,EAAEuB,IAAI,CAACA,IAAI,CAACvB,IAAI;cACpBwB,SAAS,EAAED,IAAI,CAACC;YACpB,CAAC,CAAC,CAAC;YACHC,KAAK,EAAET,QAAQ,CAACS,KAAK,CAACb,GAAG,CAAEc,IAAS,KAAM;cACtC1B,IAAI,EAAE0B,IAAI,CAACA,IAAI,CAAC1B;YACpB,CAAC,CAAC;UACN,CAAC;QACL,CAAC,CACL,CAAC;QAED,MAAM2B,gBAAgB,GAAGlC,WAAW,CAACkB,SAAS,CAACiB,SAAS,CAAEf,OAAY,IAAKA,OAAO,CAACgB,UAAU,CAAC;QAE9F1C,UAAU,CAAC;UACPa,IAAI,EAAEP,WAAW,CAACO,IAAI;UACtBL,iBAAiB;UACjBO,UAAU;UACVG,KAAK;UACLyB,KAAK,EAAEtB;QACX,CAAC,CAAC;QAEFnB,eAAe,CAACsC,gBAAgB,CAAC;MACrC,CAAC,CAAC,OAAOI,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MAC3D;IACJ,CAAC;IAEDzC,mBAAmB,CAAC,CAAC;EACzB,CAAC,EAAE,CAACL,EAAE,CAAC,CAAC;EAER,IAAI,CAACC,OAAO,EAAE;IACV,oBAAOJ,OAAA;MAAAmD,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,oBACIvD,OAAA,CAACL,SAAS;IAAAwD,QAAA,gBACNnD,OAAA;MAAAmD,QAAA,GACK/C,OAAO,CAACc,IAAI,CAACsC,MAAM,CAAC,CAAC,CAAC,CAAClC,WAAW,CAAC,CAAC,GAAGlB,OAAO,CAACc,IAAI,CAACuC,KAAK,CAAC,CAAC,CAAC,EAAC,MAAI,EAACC,MAAM,CAACtD,OAAO,CAACS,iBAAiB,CAAC,CAAC8C,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrH,CAAC,eACLvD,OAAA;MAAAmD,QAAA,GAAG,aACY,EAAC/C,OAAO,CAACgB,UAAU,CAACwC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAC,KAAG,EAACxD,OAAO,CAACmB,KAAK;IAAA;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,eAEJvD,OAAA,CAACJ,IAAI;MAACiE,SAAS,EAAEvD,YAAa;MAACwD,QAAQ,EAAGC,CAAC,IAAKxD,eAAe,CAACyD,MAAM,CAACD,CAAC,CAAC,CAAE;MAACE,SAAS,EAAC,MAAM;MAAAd,QAAA,EACvF/C,OAAO,CAAC4C,KAAK,CAAClB,GAAG,CAAC,CAACoC,IAAI,EAAEC,KAAK,kBAC3BnE,OAAA,CAACH,GAAG;QAACuE,QAAQ,EAAED,KAAM;QAACE,KAAK,EAAEH,IAAI,CAAChD,IAAK;QAAAiC,QAAA,eACnCnD,OAAA,CAACF,gBAAgB;UAACoE,IAAI,EAAEA;QAAK;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADSW,IAAI,CAAC/D,EAAE;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE/C,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEpB,CAAC;AAACrD,EAAA,CAhFID,aAAuB;EAAA,QACVR,SAAS;AAAA;AAAA6E,EAAA,GADtBrE,aAAuB;AAkF7B,eAAeA,aAAa;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}