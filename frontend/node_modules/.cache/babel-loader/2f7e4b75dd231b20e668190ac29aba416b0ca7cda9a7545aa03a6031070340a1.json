{"ast":null,"code":"var _jsxFileName = \"/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/Pokedex.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Card, Container, Row, Col, Spinner, Pagination } from 'react-bootstrap';\nimport './Pokedex.css'; // Import the custom CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pokedex = () => {\n  _s();\n  const [allPokemonSpecies, setAllPokemonSpecies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [loading, setLoading] = useState(true);\n  const limit = 24;\n  useEffect(() => {\n    const fetchAllPokemonSpecies = async () => {\n      setLoading(true);\n      try {\n        const speciesList = [];\n        let url = 'https://pokeapi.co/api/v2/pokemon-species?offset=0&limit=1000';\n        while (url) {\n          const response = await axios.get(url);\n          response.data.results.forEach((species, index) => {\n            const number = species.url.split('/').filter(Boolean).pop(); // Extract the Pokémon number from the URL\n            speciesList.push({\n              name: species.name,\n              url: species.url,\n              number: parseInt(number),\n              sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${number}.png`\n            });\n          });\n          url = response.data.next;\n        }\n        setAllPokemonSpecies(speciesList);\n      } catch (error) {\n        console.error('Error fetching Pokémon species:', error);\n      }\n      setLoading(false);\n    };\n    fetchAllPokemonSpecies();\n  }, []);\n\n  // Pagination\n  const totalPages = Math.ceil(allPokemonSpecies.length / limit);\n  const currentPokemonSpecies = allPokemonSpecies.slice((currentPage - 1) * limit, currentPage * limit);\n  const handlePageClick = page => {\n    setCurrentPage(page);\n  };\n  const renderPaginationItems = () => {\n    const paginationItems = [];\n    const maxItemsToShow = 5; // Number of pagination items to show at a time\n\n    if (totalPages <= maxItemsToShow) {\n      for (let i = 1; i <= totalPages; i++) {\n        paginationItems.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          active: i === currentPage,\n          onClick: () => handlePageClick(i),\n          children: i\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this));\n      }\n    } else {\n      const startPage = Math.max(1, currentPage - 2);\n      const endPage = Math.min(totalPages, currentPage + 2);\n      if (startPage > 1) {\n        paginationItems.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          onClick: () => handlePageClick(1),\n          children: \"1\"\n        }, 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this));\n        if (startPage > 2) {\n          paginationItems.push( /*#__PURE__*/_jsxDEV(Pagination.Ellipsis, {}, \"startEllipsis\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 42\n          }, this));\n        }\n      }\n      for (let i = startPage; i <= endPage; i++) {\n        paginationItems.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          active: i === currentPage,\n          onClick: () => handlePageClick(i),\n          children: i\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this));\n      }\n      if (endPage < totalPages) {\n        if (endPage < totalPages - 1) {\n          paginationItems.push( /*#__PURE__*/_jsxDEV(Pagination.Ellipsis, {}, \"endEllipsis\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 42\n          }, this));\n        }\n        paginationItems.push( /*#__PURE__*/_jsxDEV(Pagination.Item, {\n          onClick: () => handlePageClick(totalPages),\n          children: totalPages\n        }, totalPages, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this));\n      }\n    }\n    return paginationItems;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pokedex\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: currentPokemonSpecies.map((species, index) => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 2,\n        className: \"mb-4\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"pokemon-card text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pokemon-number\",\n            children: [\"#\", species.number]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: species.sprite,\n            alt: species.name,\n            style: {\n              width: '80px',\n              height: '80px',\n              margin: 'auto'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              style: {\n                fontSize: '1rem'\n              },\n              children: species.name.charAt(0).toUpperCase() + species.name.slice(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      className: \"justify-content-center mt-3\",\n      children: renderPaginationItems()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n_s(Pokedex, \"It+6T3c0ui+HKgdJo5EfFJ1BVis=\");\n_c = Pokedex;\nexport default Pokedex;\nvar _c;\n$RefreshReg$(_c, \"Pokedex\");","map":{"version":3,"names":["React","useEffect","useState","axios","Card","Container","Row","Col","Spinner","Pagination","jsxDEV","_jsxDEV","Pokedex","_s","allPokemonSpecies","setAllPokemonSpecies","currentPage","setCurrentPage","loading","setLoading","limit","fetchAllPokemonSpecies","speciesList","url","response","get","data","results","forEach","species","index","number","split","filter","Boolean","pop","push","name","parseInt","sprite","next","error","console","totalPages","Math","ceil","length","currentPokemonSpecies","slice","handlePageClick","page","renderPaginationItems","paginationItems","maxItemsToShow","i","Item","active","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","startPage","max","endPage","min","Ellipsis","animation","map","xs","sm","md","lg","className","Img","variant","src","alt","style","width","height","margin","Body","Title","fontSize","charAt","toUpperCase","_c","$RefreshReg$"],"sources":["/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/Pokedex.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Card, Container, Row, Col, Spinner, Pagination } from 'react-bootstrap';\nimport './Pokedex.css'; // Import the custom CSS file\n\ninterface PokemonSpecies {\n    name: string;\n    url: string;\n    number: number;\n    sprite?: string;\n}\n\nconst Pokedex: React.FC = () => {\n    const [allPokemonSpecies, setAllPokemonSpecies] = useState<PokemonSpecies[]>([]);\n    const [currentPage, setCurrentPage] = useState<number>(1);\n    const [loading, setLoading] = useState<boolean>(true);\n    const limit = 24; \n\n    useEffect(() => {\n        const fetchAllPokemonSpecies = async () => {\n            setLoading(true);\n            try {\n                const speciesList: PokemonSpecies[] = [];\n                let url = 'https://pokeapi.co/api/v2/pokemon-species?offset=0&limit=1000';\n                while (url) {\n                    const response = await axios.get(url);\n                    response.data.results.forEach((species: any, index: number) => {\n                        const number = species.url.split('/').filter(Boolean).pop(); // Extract the Pokémon number from the URL\n                        speciesList.push({\n                            name: species.name,\n                            url: species.url,\n                            number: parseInt(number),\n                            sprite: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${number}.png`,\n                        });\n                    });\n                    url = response.data.next;\n                }\n                setAllPokemonSpecies(speciesList);\n            } catch (error) {\n                console.error('Error fetching Pokémon species:', error);\n            }\n            setLoading(false);\n        };\n\n        fetchAllPokemonSpecies();\n    }, []);\n\n    // Pagination\n    const totalPages = Math.ceil(allPokemonSpecies.length / limit);\n    const currentPokemonSpecies = allPokemonSpecies.slice(\n        (currentPage - 1) * limit,\n        currentPage * limit\n    );\n\n    const handlePageClick = (page: number) => {\n        setCurrentPage(page);\n    };\n\n    const renderPaginationItems = () => {\n        const paginationItems = [];\n        const maxItemsToShow = 5; // Number of pagination items to show at a time\n\n        if (totalPages <= maxItemsToShow) {\n            for (let i = 1; i <= totalPages; i++) {\n                paginationItems.push(\n                    <Pagination.Item key={i} active={i === currentPage} onClick={() => handlePageClick(i)}>\n                        {i}\n                    </Pagination.Item>\n                );\n            }\n        } else {\n            const startPage = Math.max(1, currentPage - 2);\n            const endPage = Math.min(totalPages, currentPage + 2);\n\n            if (startPage > 1) {\n                paginationItems.push(\n                    <Pagination.Item key={1} onClick={() => handlePageClick(1)}>\n                        1\n                    </Pagination.Item>\n                );\n                if (startPage > 2) {\n                    paginationItems.push(<Pagination.Ellipsis key=\"startEllipsis\" />);\n                }\n            }\n\n            for (let i = startPage; i <= endPage; i++) {\n                paginationItems.push(\n                    <Pagination.Item key={i} active={i === currentPage} onClick={() => handlePageClick(i)}>\n                        {i}\n                    </Pagination.Item>\n                );\n            }\n\n            if (endPage < totalPages) {\n                if (endPage < totalPages - 1) {\n                    paginationItems.push(<Pagination.Ellipsis key=\"endEllipsis\" />);\n                }\n                paginationItems.push(\n                    <Pagination.Item key={totalPages} onClick={() => handlePageClick(totalPages)}>\n                        {totalPages}\n                    </Pagination.Item>\n                );\n            }\n        }\n\n        return paginationItems;\n    };\n\n    return (\n        <Container>\n            <h1>Pokedex</h1>\n            {loading && <Spinner animation=\"border\" />}\n            <Row>\n                {currentPokemonSpecies.map((species, index) => (\n                    <Col xs={12} sm={6} md={4} lg={2} key={index} className=\"mb-4\">\n                        <Card className=\"pokemon-card text-center\">\n                            <div className=\"pokemon-number\">#{species.number}</div>\n                            <Card.Img variant=\"top\" src={species.sprite} alt={species.name} style={{ width: '80px', height: '80px', margin: 'auto' }} />\n                            <Card.Body>\n                                <Card.Title style={{ fontSize: '1rem' }}>{species.name.charAt(0).toUpperCase() + species.name.slice(1)}</Card.Title>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                ))}\n            </Row>\n            <Pagination className=\"justify-content-center mt-3\">\n                {renderPaginationItems()}\n            </Pagination>\n        </Container>\n    );\n};\n\nexport default Pokedex;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}