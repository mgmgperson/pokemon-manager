{"ast":null,"code":"var _jsxFileName = \"/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/TrainerList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Pagination } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TrainerList = () => {\n  _s();\n  const [trainers, setTrainers] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [trainersPerPage] = useState(20);\n  useEffect(() => {\n    const fetchTrainers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/trainers');\n        setTrainers(response.data.data);\n      } catch (error) {\n        console.error('Error fetching trainers:', error);\n      }\n    };\n    fetchTrainers();\n  }, []);\n\n  // Get current trainers\n  const indexOfLastTrainer = currentPage * trainersPerPage;\n  const indexOfFirstTrainer = indexOfLastTrainer - trainersPerPage;\n  const currentTrainers = trainers.slice(indexOfFirstTrainer, indexOfLastTrainer);\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  // Calculate total pages\n  const totalPages = Math.ceil(trainers.length / trainersPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"PWTR List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            style: {\n              width: '10%'\n            },\n            children: \"Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            style: {\n              width: '30%'\n            },\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            style: {\n              width: '20%'\n            },\n            children: \"Rating\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            style: {\n              width: '20%'\n            },\n            children: \"Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            style: {\n              width: '20%'\n            },\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentTrainers.map((trainer, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              width: '10%'\n            },\n            children: indexOfFirstTrainer + index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              width: '30%'\n            },\n            children: [trainer.fname, \" \", trainer.lname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              width: '20%'\n            },\n            children: trainer.pwtr_rating.toFixed(2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              width: '20%'\n            },\n            children: trainer.region_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              width: '20%'\n            },\n            children: trainer.title !== 'None' ? trainer.title : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)]\n        }, trainer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      children: [/*#__PURE__*/_jsxDEV(Pagination.First, {\n        onClick: () => paginate(1),\n        disabled: currentPage === 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pagination.Prev, {\n        onClick: () => paginate(currentPage - 1),\n        disabled: currentPage === 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), [...Array(totalPages)].map((_, i) => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n        active: i + 1 === currentPage,\n        onClick: () => paginate(i + 1),\n        children: i + 1\n      }, i + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n        onClick: () => paginate(currentPage + 1),\n        disabled: currentPage === totalPages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pagination.Last, {\n        onClick: () => paginate(totalPages),\n        disabled: currentPage === totalPages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n\n  //TODO: Eventually add DataTable components, such as row, pagination, etc, to keep separate\n};\n_s(TrainerList, \"X26coCBWQBQA//hRKhE/ZdxVICQ=\");\n_c = TrainerList;\nexport default TrainerList;\nvar _c;\n$RefreshReg$(_c, \"TrainerList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Pagination","jsxDEV","_jsxDEV","TrainerList","_s","trainers","setTrainers","currentPage","setCurrentPage","trainersPerPage","fetchTrainers","response","get","data","error","console","indexOfLastTrainer","indexOfFirstTrainer","currentTrainers","slice","paginate","pageNumber","totalPages","Math","ceil","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","scope","style","width","map","trainer","index","fname","lname","pwtr_rating","toFixed","region_name","title","id","First","onClick","disabled","Prev","Array","_","i","Item","active","Next","Last","_c","$RefreshReg$"],"sources":["/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/TrainerList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Pagination, Table } from 'react-bootstrap';\n\nconst TrainerList: React.FC = () => {\n    const [trainers, setTrainers] = useState<any[]>([]);\n    const [currentPage, setCurrentPage] = useState<number>(1);\n    const [trainersPerPage] = useState<number>(20); \n\n    useEffect(() => {\n        const fetchTrainers = async () => {\n            try {\n                const response = await axios.get('http://localhost:5000/trainers');\n                setTrainers(response.data.data);\n            } catch (error) {\n                console.error('Error fetching trainers:', error);\n            }\n        };\n\n        fetchTrainers();\n    }, []);\n\n    // Get current trainers\n    const indexOfLastTrainer = currentPage * trainersPerPage;\n    const indexOfFirstTrainer = indexOfLastTrainer - trainersPerPage;\n    const currentTrainers = trainers.slice(indexOfFirstTrainer, indexOfLastTrainer);\n\n    // Change page\n    const paginate = (pageNumber: number) => setCurrentPage(pageNumber);\n\n    // Calculate total pages\n    const totalPages = Math.ceil(trainers.length / trainersPerPage);\n\n    return (\n        <div>\n            <h1>PWTR List</h1>\n            <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th scope=\"col\" style={{width: '10%'}}>Rank</th>\n                        <th scope=\"col\" style={{width: '30%'}}>Name</th>\n                        <th scope=\"col\" style={{width: '20%'}}>Rating</th>\n                        <th scope=\"col\" style={{width: '20%'}}>Region</th>\n                        <th scope=\"col\" style={{width: '20%'}}>Title</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {currentTrainers.map((trainer, index) => (\n                        <tr key={trainer.id}>\n                            <td style={{width: '10%'}}>{indexOfFirstTrainer + index + 1}</td>\n                            <td style={{width: '30%'}}>{trainer.fname} {trainer.lname}</td>\n                            <td style={{width: '20%'}}>{trainer.pwtr_rating.toFixed(2)}</td>\n                            <td style={{width: '20%'}}>{trainer.region_name}</td>\n                            <td style={{width: '20%'}}>{trainer.title !== 'None' ? trainer.title : ''}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n\n            <Pagination>\n                <Pagination.First onClick={() => paginate(1)} disabled={currentPage === 1} />\n                <Pagination.Prev onClick={() => paginate(currentPage - 1)} disabled={currentPage === 1} />\n                {[...Array(totalPages)].map((_, i) => (\n                    <Pagination.Item key={i + 1} active={i + 1 === currentPage} onClick={() => paginate(i + 1)}>\n                        {i + 1}\n                    </Pagination.Item>\n                ))}\n                <Pagination.Next onClick={() => paginate(currentPage + 1)} disabled={currentPage === totalPages} />\n                <Pagination.Last onClick={() => paginate(totalPages)} disabled={currentPage === totalPages} />\n            </Pagination>\n        </div>\n    );\n\n    //TODO: Eventually add DataTable components, such as row, pagination, etc, to keep separate\n};\n\nexport default TrainerList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}