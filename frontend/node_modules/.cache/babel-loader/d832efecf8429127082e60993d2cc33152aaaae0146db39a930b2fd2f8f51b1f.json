{"ast":null,"code":"var _jsxFileName = \"/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/trainers/TrainerPokemonInfo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport axios from 'axios';\nimport TypeBadge from './TypeBadge';\nimport '../css/Trainers.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchPokemonSpecies = async speciesId => {\n  const {\n    data\n  } = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${speciesId}`);\n  return data;\n};\nconst fetchPokemonTypes = async pokemonId => {\n  const {\n    data\n  } = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}`);\n  return data.types;\n};\nconst TrainerPokemonInfo = ({\n  pokemon\n}) => {\n  _s();\n  const [speciesName, setSpeciesName] = useState('');\n  const [types, setTypes] = useState([]);\n  const {\n    data: speciesData,\n    isLoading: isSpeciesLoading\n  } = useQuery({\n    queryKey: ['pokemonSpecies', pokemon.species_id],\n    queryFn: () => fetchPokemonSpecies(pokemon.species_id)\n  });\n  const {\n    data: typesData,\n    isLoading: isTypesLoading\n  } = useQuery({\n    queryKey: ['pokemonTypes', pokemon.pokemon_id],\n    queryFn: () => fetchPokemonTypes(pokemon.pokemon_id)\n  });\n  useEffect(() => {\n    if (speciesData) {\n      setSpeciesName(speciesData.name);\n    }\n  }, [speciesData]);\n  useEffect(() => {\n    if (typesData) {\n      setTypes(typesData);\n    }\n  }, [typesData]);\n  if (isSpeciesLoading || isTypesLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pokemon-info\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Dex No. \", pokemon.species_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: speciesName.charAt(0).toUpperCase() + speciesName.slice(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"type-buttons\",\n      children: types.map((type, idx) => /*#__PURE__*/_jsxDEV(TypeBadge, {\n        type: type.type.name\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pokemon-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"OT:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 20\n        }, this), \" \", pokemon.ot_name || 'Unknown']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"ID No.:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }, this), \" \", pokemon.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Exp. Points:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 20\n        }, this), \" \", pokemon.experience_points || 'Unknown']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(TrainerPokemonInfo, \"xrdbb8wsKnLx3iGi6ke+aBFEQ+4=\", false, function () {\n  return [useQuery, useQuery];\n});\n_c = TrainerPokemonInfo;\nexport default TrainerPokemonInfo;\nvar _c;\n$RefreshReg$(_c, \"TrainerPokemonInfo\");","map":{"version":3,"names":["React","useEffect","useState","useQuery","axios","TypeBadge","jsxDEV","_jsxDEV","fetchPokemonSpecies","speciesId","data","get","fetchPokemonTypes","pokemonId","types","TrainerPokemonInfo","pokemon","_s","speciesName","setSpeciesName","setTypes","speciesData","isLoading","isSpeciesLoading","queryKey","species_id","queryFn","typesData","isTypesLoading","pokemon_id","name","children","fileName","_jsxFileName","lineNumber","columnNumber","className","charAt","toUpperCase","slice","map","type","idx","ot_name","id","experience_points","_c","$RefreshReg$"],"sources":["/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/trainers/TrainerPokemonInfo.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\nimport axios from 'axios';\nimport TypeBadge from './TypeBadge';\nimport '../css/Trainers.scss';\nimport { Pokemon, PokemonSpecies, Type } from '../../types';\n\ninterface TrainerPokemonInfoProps {\n    pokemon: Pokemon;\n}\n\nconst fetchPokemonSpecies = async (speciesId: number): Promise<PokemonSpecies> => {\n    const { data } = await axios.get(`https://pokeapi.co/api/v2/pokemon-species/${speciesId}`);\n    return data;\n};\n\nconst fetchPokemonTypes = async (pokemonId: number): Promise<Type[]> => {\n    const { data } = await axios.get(`https://pokeapi.co/api/v2/pokemon/${pokemonId}`);\n    return data.types;\n};\n\nconst TrainerPokemonInfo: React.FC<TrainerPokemonInfoProps> = ({ pokemon }) => {\n    const [speciesName, setSpeciesName] = useState<string>('');\n    const [types, setTypes] = useState<Type[]>([]);\n\n    const { data: speciesData, isLoading: isSpeciesLoading } = useQuery<PokemonSpecies>({\n        queryKey: ['pokemonSpecies', pokemon.species_id],\n        queryFn: () => fetchPokemonSpecies(pokemon.species_id),\n    });\n\n    const { data: typesData, isLoading: isTypesLoading } = useQuery<Type[]>({\n        queryKey: ['pokemonTypes', pokemon.pokemon_id],\n        queryFn: () => fetchPokemonTypes(pokemon.pokemon_id),\n    });\n\n    useEffect(() => {\n        if (speciesData) {\n            setSpeciesName(speciesData.name);\n        }\n    }, [speciesData]);\n\n    useEffect(() => {\n        if (typesData) {\n            setTypes(typesData);\n        }\n    }, [typesData]);\n\n    if (isSpeciesLoading || isTypesLoading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className=\"pokemon-info\">\n            <h4>Dex No. {pokemon.species_id}</h4>\n            <h5>{speciesName.charAt(0).toUpperCase() + speciesName.slice(1)}</h5>\n\n            <div className=\"type-buttons\">\n                {types.map((type, idx) => (\n                    <TypeBadge key={idx} type={type.type.name} />\n                ))}\n            </div>\n\n            <div className=\"pokemon-details\">\n                <p><strong>OT:</strong> {pokemon.ot_name || 'Unknown'}</p>\n                <p><strong>ID No.:</strong> {pokemon.id}</p>\n                <p><strong>Exp. Points:</strong> {pokemon.experience_points || 'Unknown'}</p>\n            </div>\n        </div>\n    );\n};\n\nexport default TrainerPokemonInfo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}