{"ast":null,"code":"var _jsxFileName = \"/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/RegionList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegionList = () => {\n  _s();\n  const [regions, setRegions] = useState([]);\n  const [sortField, setSortField] = useState(null);\n  const [sortOrder, setSortOrder] = useState(true); // true for ascending, false for descending\n\n  useEffect(() => {\n    const fetchRegions = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/regions');\n        setRegions(response.data.data);\n      } catch (error) {\n        console.error('Error fetching regions:', error);\n      }\n    };\n    fetchRegions();\n  }, []);\n  const handleSort = field => {\n    const order = sortField === field ? !sortOrder : true;\n    const sortedRegions = [...regions].sort((a, b) => {\n      if (a[field] === null) return 1;\n      if (b[field] === null) return -1;\n      return order ? String(a[field]).localeCompare(String(b[field]), undefined, {\n        numeric: true\n      }) : String(b[field]).localeCompare(String(a[field]), undefined, {\n        numeric: true\n      });\n    });\n    setSortField(field);\n    setSortOrder(order);\n    setRegions(sortedRegions);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Regions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('name'),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [\"Name \", sortField === 'name' ? sortOrder ? '▲' : '▼' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            onClick: () => handleSort('population'),\n            style: {\n              cursor: 'pointer'\n            },\n            children: [\"Population \", sortField === 'population' ? sortOrder ? '▲' : '▼' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: regions.map(region => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: region.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: region.population ? region.population.toLocaleString() : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, region.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(RegionList, \"50BjOTP3HnND4h2MCp/UCHwiY0g=\");\n_c = RegionList;\nexport default RegionList;\nvar _c;\n$RefreshReg$(_c, \"RegionList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Table","jsxDEV","_jsxDEV","RegionList","_s","regions","setRegions","sortField","setSortField","sortOrder","setSortOrder","fetchRegions","response","get","data","error","console","handleSort","field","order","sortedRegions","sort","a","b","String","localeCompare","undefined","numeric","children","fileName","_jsxFileName","lineNumber","columnNumber","hover","onClick","style","cursor","map","region","name","population","toLocaleString","id","_c","$RefreshReg$"],"sources":["/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/RegionList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Table } from 'react-bootstrap';\n\ninterface Region {\n    id: number;\n    name: string;\n    population: number;\n}\n\nconst RegionList: React.FC = () => {\n    const [regions, setRegions] = useState<Region[]>([]);\n    const [sortField, setSortField] = useState<string | null>(null);\n    const [sortOrder, setSortOrder] = useState<boolean>(true); // true for ascending, false for descending\n\n    useEffect(() => {\n        const fetchRegions = async () => {\n            try {\n                const response = await axios.get('http://localhost:5000/regions');\n                setRegions(response.data.data);\n            } catch (error) {\n                console.error('Error fetching regions:', error);\n            }\n        };\n\n        fetchRegions();\n    }, []);\n\n    const handleSort = (field: string) => {\n        const order = (sortField === field) ? !sortOrder : true;\n        const sortedRegions = [...regions].sort((a, b) => {\n            if (a[field] === null) return 1;\n            if (b[field] === null) return -1;\n            return order ? String(a[field]).localeCompare(String(b[field]), undefined, {numeric: true}) : String(b[field]).localeCompare(String(a[field]), undefined, {numeric: true});\n        });\n        setSortField(field);\n        setSortOrder(order);\n        setRegions(sortedRegions);\n    };\n\n    return (\n        <div>\n            <h1>Regions</h1>\n            <Table hover>\n                <thead>\n                    <tr>\n                        <th onClick={() => handleSort('name')} style={{cursor: 'pointer'}}>Name {sortField === 'name' ? (sortOrder ? '▲' : '▼') : ''}</th>\n                        <th onClick={() => handleSort('population')} style={{cursor: 'pointer'}}>Population {sortField === 'population' ? (sortOrder ? '▲' : '▼') : ''}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {regions.map((region) => (\n                        <tr key={region.id}>\n                            <td>{region.name}</td>\n                            <td>{region.population ? region.population.toLocaleString() : ''}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n        </div>\n    );\n};\n\nexport default RegionList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}