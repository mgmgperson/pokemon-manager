{"ast":null,"code":"var _jsxFileName = \"/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/pokedex/PokemonSprites.tsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PokemonSprites = ({\n  sprites\n}) => {\n  const renderSpriteRow = (id, spriteUrls) => {\n    const hasSprites = spriteUrls.some(url => url !== null);\n    if (!hasSprites) return null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mb-4\",\n        children: spriteUrls.map((url, index) => url && /*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: url,\n            alt: `${id}-${index}`,\n            style: {\n              width: '30%'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this))\n      }, `${id}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderSpriteRow(\"Default\", [sprites.front_default, sprites.back_default, sprites.front_shiny, sprites.back_shiny]), sprites.other && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [renderSpriteRow(\"Dream World\", [sprites.other.dream_world.front_default]), renderSpriteRow(\"Home\", [sprites.other.home.front_default, sprites.other.home.front_shiny]), renderSpriteRow(\"Official Artwork\", [sprites.other['official-artwork'].front_default, sprites.other['official-artwork'].front_shiny]), renderSpriteRow(\"Showdown\", [sprites.other.showdown.front_default, sprites.other.showdown.back_default, sprites.other.showdown.front_shiny, sprites.other.showdown.back_shiny])]\n    }, void 0, true), sprites.versions && Object.entries(sprites.versions).map(([generation, games]) => {\n      const spriteUrls = Object.values(games).flatMap(game => Object.values(game).filter(url => typeof url === 'string' || url === null));\n      if (spriteUrls.length === 0) return null;\n      return renderSpriteRow(generation.toUpperCase().replace(/-/g, ' '), spriteUrls);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = PokemonSprites;\nexport default PokemonSprites;\nvar _c;\n$RefreshReg$(_c, \"PokemonSprites\");","map":{"version":3,"names":["React","Row","Col","jsxDEV","_jsxDEV","Fragment","_Fragment","PokemonSprites","sprites","renderSpriteRow","id","spriteUrls","hasSprites","some","url","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","xs","md","src","alt","style","width","front_default","back_default","front_shiny","back_shiny","other","dream_world","home","showdown","versions","Object","entries","generation","games","values","flatMap","game","filter","length","toUpperCase","replace","_c","$RefreshReg$"],"sources":["/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/pokedex/PokemonSprites.tsx"],"sourcesContent":["import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { Sprites } from '../../types';\n\ninterface PokemonSpritesProps {\n    sprites: Sprites;\n}\n\nconst PokemonSprites: React.FC<PokemonSpritesProps> = ({ sprites }) => {\n    const renderSpriteRow = (id: string, spriteUrls: (string | null)[]) => {\n        const hasSprites = spriteUrls.some((url) => url !== null);\n        if (!hasSprites) return null;\n\n        return (\n            <>\n                <h4>{id}</h4>\n                <Row className=\"mb-4\" key={`${id}`}>\n                    {spriteUrls.map((url, index) => url && (\n                        <Col xs={6} md={3}>\n                            <img src={url} alt={`${id}-${index}`} style={{ width: '30%' }} />\n                        </Col>\n                    ))}\n                </Row>\n            </>\n        );\n    };\n\n    return (\n        <div>\n            {renderSpriteRow(\"Default\", [\n                sprites.front_default, sprites.back_default, \n                sprites.front_shiny, sprites.back_shiny\n            ])}\n\n            {sprites.other && (\n                <>\n                    {renderSpriteRow(\"Dream World\", [\n                        sprites.other.dream_world.front_default\n                    ])}\n                    {renderSpriteRow(\"Home\", [\n                        sprites.other.home.front_default, sprites.other.home.front_shiny\n                    ])}\n                    {renderSpriteRow(\"Official Artwork\", [\n                        sprites.other['official-artwork'].front_default, sprites.other['official-artwork'].front_shiny\n                    ])}\n                    {renderSpriteRow(\"Showdown\", [\n                        sprites.other.showdown.front_default, sprites.other.showdown.back_default,\n                        sprites.other.showdown.front_shiny, sprites.other.showdown.back_shiny\n                    ])}\n                </>\n            )}\n\n            {sprites.versions && Object.entries(sprites.versions).map(([generation, games]) => {\n                const spriteUrls = Object.values(games).flatMap(game => \n                    Object.values(game as { [key: string]: string | null }).filter((url): url is string | null => typeof url === 'string' || url === null)\n                );\n                if (spriteUrls.length === 0) return null;\n                return renderSpriteRow(generation.toUpperCase().replace(/-/g, ' '), spriteUrls);\n            })}\n        </div>\n    );\n};\n\nexport default PokemonSprites;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}