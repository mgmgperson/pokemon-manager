{"ast":null,"code":"var _jsxFileName = \"/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/RegionList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport SortableTable from './SortableTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegionList = () => {\n  _s();\n  const [regions, setRegions] = useState([]);\n  useEffect(() => {\n    const fetchRegions = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/regions');\n        setRegions(response.data.data);\n      } catch (error) {\n        console.error('Error fetching regions:', error);\n      }\n    };\n    fetchRegions();\n  }, []);\n  const columns = [{\n    key: 'name',\n    label: 'Name'\n  }, {\n    key: 'population',\n    label: 'Population'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Regions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SortableTable, {\n      columns: columns,\n      data: regions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(RegionList, \"mKZdqWcfPS/BI+rvpbnAJ9Lgr+Y=\");\n_c = RegionList;\nexport default RegionList;\nvar _c;\n$RefreshReg$(_c, \"RegionList\");","map":{"version":3,"names":["React","useEffect","useState","axios","SortableTable","jsxDEV","_jsxDEV","RegionList","_s","regions","setRegions","fetchRegions","response","get","data","error","console","columns","key","label","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/RegionList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport SortableTable from './SortableTable';\n\ninterface Region {\n    id: number;\n    name: string;\n    population: number;\n}\n\nconst RegionList: React.FC = () => {\n    const [regions, setRegions] = useState<Region[]>([]);\n\n    useEffect(() => {\n        const fetchRegions = async () => {\n            try {\n                const response = await axios.get('http://localhost:5000/regions');\n                setRegions(response.data.data);\n            } catch (error) {\n                console.error('Error fetching regions:', error);\n            }\n        };\n\n        fetchRegions();\n    }, []);\n\n    const columns = [\n        { key: 'name', label: 'Name' },\n        { key: 'population', label: 'Population' },\n    ];\n\n    return (\n        <div>\n            <h1>Regions</h1>\n            <SortableTable columns={columns} data={regions} />\n        </div>\n    );\n};\n\nexport default RegionList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQ5C,MAAMC,UAAoB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAW,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACZ,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,+BAA+B,CAAC;QACjEH,UAAU,CAACE,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC;IAEDJ,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,OAAO,GAAG,CACZ;IAAEC,GAAG,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,EAC9B;IAAED,GAAG,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAa,CAAC,CAC7C;EAED,oBACIb,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBlB,OAAA,CAACF,aAAa;MAACa,OAAO,EAAEA,OAAQ;MAACH,IAAI,EAAEL;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEd,CAAC;AAAChB,EAAA,CA3BID,UAAoB;AAAAkB,EAAA,GAApBlB,UAAoB;AA6B1B,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}