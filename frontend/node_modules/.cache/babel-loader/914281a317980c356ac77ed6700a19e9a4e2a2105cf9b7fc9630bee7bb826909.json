{"ast":null,"code":"var _jsxFileName = \"/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/pokedex/PokemonDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Container, Tabs, Tab } from 'react-bootstrap';\nimport PokemonBasicInfo from './PokemonBasicInfo';\nimport PokemonLearnset from './PokemonLearnset'; // The second tab, currently blank\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [pokemonForm, setPokemonForm] = useState(null);\n  const [pokemonSpecies, setPokemonSpecies] = useState(null);\n  useEffect(() => {\n    const fetchPokemonForm = async () => {\n      try {\n        const formResponse = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}/`);\n        const formData = formResponse.data;\n\n        // Fetch species data using the species URL\n        const speciesResponse = await axios.get(formData.species.url);\n        const speciesData = speciesResponse.data;\n\n        // Extract relevant data for species\n        const nationalDexNumber = speciesData.pokedex_numbers.find(entry => entry.pokedex.name === 'national').entry_number;\n        const generation = speciesData.generation.name.replace('generation-', 'Generation ').toUpperCase();\n        const genus = speciesData.genera.find(entry => entry.language.name === 'en').genus;\n        setPokemonForm({\n          id: formData.id,\n          name: formData.name,\n          abilities: formData.abilities.map(ability => ({\n            name: ability.ability.name,\n            is_hidden: ability.is_hidden\n          })),\n          height: formData.height / 10,\n          // Convert decimeters to meters\n          weight: formData.weight / 10,\n          // Convert hectograms to kilograms\n          stats: formData.stats.map(stat => ({\n            name: stat.stat.name,\n            base_stat: stat.base_stat\n          })),\n          types: formData.types.map(type => ({\n            name: type.type.name\n          }))\n        });\n        setPokemonSpecies({\n          name: speciesData.name,\n          nationalDexNumber,\n          generation,\n          genus\n        });\n      } catch (error) {\n        console.error('Error fetching Pokémon details:', error);\n      }\n    };\n    fetchPokemonForm();\n  }, [id]);\n  if (!pokemonForm || !pokemonSpecies) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [pokemonSpecies.name.charAt(0).toUpperCase() + pokemonSpecies.name.slice(1), \" - #\", String(pokemonSpecies.nationalDexNumber).padStart(3, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [pokemonSpecies.generation, \" - \", pokemonSpecies.genus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      defaultActiveKey: \"info\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"info\",\n        title: \"Info\",\n        children: /*#__PURE__*/_jsxDEV(PokemonBasicInfo, {\n          form: pokemonForm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"learnset\",\n        title: \"Learnset\",\n        children: /*#__PURE__*/_jsxDEV(PokemonLearnset, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(PokemonDetail, \"Ph23+shQ6TQQv6+xrV3VVW+doTE=\", false, function () {\n  return [useParams];\n});\n_c = PokemonDetail;\nexport default PokemonDetail;\nvar _c;\n$RefreshReg$(_c, \"PokemonDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","Container","Tabs","Tab","PokemonBasicInfo","PokemonLearnset","jsxDEV","_jsxDEV","PokemonDetail","_s","id","pokemonForm","setPokemonForm","pokemonSpecies","setPokemonSpecies","fetchPokemonForm","formResponse","get","formData","data","speciesResponse","species","url","speciesData","nationalDexNumber","pokedex_numbers","find","entry","pokedex","name","entry_number","generation","replace","toUpperCase","genus","genera","language","abilities","map","ability","is_hidden","height","weight","stats","stat","base_stat","types","type","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","slice","String","padStart","defaultActiveKey","className","eventKey","title","form","_c","$RefreshReg$"],"sources":["/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/pokedex/PokemonDetail.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Container, Tabs, Tab } from 'react-bootstrap';\nimport PokemonBasicInfo from './PokemonBasicInfo';\nimport PokemonLearnset from './PokemonLearnset'; // The second tab, currently blank\n\ninterface Ability {\n    name: string;\n    is_hidden: boolean;\n}\n\ninterface Stat {\n    name: string;\n    base_stat: number;\n}\n\ninterface Type {\n    name: string;\n}\n\ninterface PokemonForm {\n    id: number;\n    name: string;\n    abilities: Ability[];\n    height: number;\n    weight: number;\n    stats: Stat[];\n    types: Type[];\n}\n\ninterface PokemonSpecies {\n    name: string;\n    nationalDexNumber: number;\n    generation: string;\n    genus: string;\n}\n\nconst PokemonDetail: React.FC = () => {\n    const { id } = useParams<{ id: string }>();\n    const [pokemonForm, setPokemonForm] = useState<PokemonForm | null>(null);\n    const [pokemonSpecies, setPokemonSpecies] = useState<PokemonSpecies | null>(null);\n\n    useEffect(() => {\n        const fetchPokemonForm = async () => {\n            try {\n                const formResponse = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}/`);\n                const formData = formResponse.data;\n\n                // Fetch species data using the species URL\n                const speciesResponse = await axios.get(formData.species.url);\n                const speciesData = speciesResponse.data;\n\n                // Extract relevant data for species\n                const nationalDexNumber = speciesData.pokedex_numbers.find((entry: any) => entry.pokedex.name === 'national').entry_number;\n                const generation = speciesData.generation.name.replace('generation-', 'Generation ').toUpperCase();\n                const genus = speciesData.genera.find((entry: any) => entry.language.name === 'en').genus;\n\n                setPokemonForm({\n                    id: formData.id,\n                    name: formData.name,\n                    abilities: formData.abilities.map((ability: any) => ({\n                        name: ability.ability.name,\n                        is_hidden: ability.is_hidden,\n                    })),\n                    height: formData.height / 10, // Convert decimeters to meters\n                    weight: formData.weight / 10, // Convert hectograms to kilograms\n                    stats: formData.stats.map((stat: any) => ({\n                        name: stat.stat.name,\n                        base_stat: stat.base_stat,\n                    })),\n                    types: formData.types.map((type: any) => ({\n                        name: type.type.name,\n                    })),\n                });\n\n                setPokemonSpecies({\n                    name: speciesData.name,\n                    nationalDexNumber,\n                    generation,\n                    genus,\n                });\n            } catch (error) {\n                console.error('Error fetching Pokémon details:', error);\n            }\n        };\n\n        fetchPokemonForm();\n    }, [id]);\n\n    if (!pokemonForm || !pokemonSpecies) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <Container>\n            <h1>\n                {pokemonSpecies.name.charAt(0).toUpperCase() + pokemonSpecies.name.slice(1)} - #{String(pokemonSpecies.nationalDexNumber).padStart(3, '0')}\n            </h1>\n            <p>\n                {pokemonSpecies.generation} - {pokemonSpecies.genus}\n            </p>\n\n            <Tabs defaultActiveKey=\"info\" className=\"mb-3\">\n                <Tab eventKey=\"info\" title=\"Info\">\n                    <PokemonBasicInfo form={pokemonForm} />\n                </Tab>\n                <Tab eventKey=\"learnset\" title=\"Learnset\">\n                    <PokemonLearnset />\n                </Tab>\n            </Tabs>\n        </Container>\n    );\n};\n\nexport default PokemonDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}