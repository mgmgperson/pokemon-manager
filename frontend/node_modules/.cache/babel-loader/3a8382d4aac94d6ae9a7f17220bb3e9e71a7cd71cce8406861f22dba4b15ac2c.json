{"ast":null,"code":"var _jsxFileName = \"/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/regions/RegionDetail.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { Tab, Nav, Container } from 'react-bootstrap';\nimport SortableTable from '../SortableTable';\nimport RegionLeague from './RegionLeague';\nimport RegionMap from './RegionMap';\nimport axios from 'axios';\n\n// Fetch region data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchRegion = async id => {\n  const {\n    data\n  } = await axios.get(`http://localhost:5000/regions/${id}`);\n  return data.data;\n};\nconst RegionDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n\n  // React Query to fetch region data\n  const {\n    data: region,\n    isLoading,\n    error\n  } = useQuery({\n    queryKey: ['region', id],\n    queryFn: () => fetchRegion(id),\n    enabled: !!id // Only enable the query when the id is available\n  });\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error loading region data.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Define columns for cities table\n  const cityColumns = [{\n    key: 'name',\n    label: 'City'\n  }, {\n    key: 'population',\n    label: 'Population'\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: region === null || region === void 0 ? void 0 : region.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Population: \", region === null || region === void 0 ? void 0 : region.population.toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tab.Container, {\n      defaultActiveKey: \"cities\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {\n        variant: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"cities\",\n            children: \"Cities\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"league\",\n            children: \"League\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n          children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n            eventKey: \"map\",\n            children: \"Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab.Content, {\n        children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"cities\",\n          children: region && /*#__PURE__*/_jsxDEV(SortableTable, {\n            columns: cityColumns,\n            data: region.cities,\n            itemsPerPage: 10,\n            withPagination: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"league\",\n          children: region && /*#__PURE__*/_jsxDEV(RegionLeague, {\n            champion: region.champion,\n            eliteFour: region.eliteFour,\n            gymLeaders: region.gymLeaders\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n          eventKey: \"map\",\n          children: region && /*#__PURE__*/_jsxDEV(RegionMap, {\n            regionName: region.name,\n            cities: region.cities\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(RegionDetail, \"5UlW448Y1icu30tD0LUIp0KUyXc=\", false, function () {\n  return [useParams, useQuery];\n});\n_c = RegionDetail;\nexport default RegionDetail;\nvar _c;\n$RefreshReg$(_c, \"RegionDetail\");","map":{"version":3,"names":["React","useParams","useQuery","Tab","Nav","Container","SortableTable","RegionLeague","RegionMap","axios","jsxDEV","_jsxDEV","fetchRegion","id","data","get","RegionDetail","_s","region","isLoading","error","queryKey","queryFn","enabled","children","fileName","_jsxFileName","lineNumber","columnNumber","cityColumns","key","label","name","population","toLocaleString","defaultActiveKey","variant","Item","Link","eventKey","Content","Pane","columns","cities","itemsPerPage","withPagination","champion","eliteFour","gymLeaders","regionName","_c","$RefreshReg$"],"sources":["/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/regions/RegionDetail.tsx"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@tanstack/react-query';\nimport { Tab, Nav, Container } from 'react-bootstrap';\nimport SortableTable from '../SortableTable';\nimport RegionLeague from './RegionLeague';\nimport RegionMap from './RegionMap';\nimport { City, Region } from '../../types';\nimport axios from 'axios';\n\n// Fetch region data\nconst fetchRegion = async (id: string): Promise<Region> => {\n    const { data } = await axios.get(`http://localhost:5000/regions/${id}`);\n    return data.data;\n};\n\nconst RegionDetail: React.FC = () => {\n    const { id } = useParams<{ id: string }>();\n\n    // React Query to fetch region data\n    const { data: region, isLoading, error } = useQuery({\n        queryKey: ['region', id],\n        queryFn: () => fetchRegion(id!),\n        enabled: !!id, // Only enable the query when the id is available\n    });\n\n    if (isLoading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div>Error loading region data.</div>;\n    }\n\n    // Define columns for cities table\n    const cityColumns: Array<{ key: keyof City, label: string, render?: (item: City) => React.ReactNode }> = [\n        { key: 'name', label: 'City' },\n        { key: 'population', label: 'Population' },\n    ];\n\n    return (\n        <Container>\n            <h1>{region?.name}</h1>\n            <p>Population: {region?.population.toLocaleString()}</p>\n            <Tab.Container defaultActiveKey=\"cities\">\n                <Nav variant=\"tabs\">\n                    <Nav.Item>\n                        <Nav.Link eventKey=\"cities\">Cities</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link eventKey=\"league\">League</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link eventKey=\"map\">Map</Nav.Link>\n                    </Nav.Item>\n                </Nav>\n                <Tab.Content>\n                    <Tab.Pane eventKey=\"cities\">\n                        {region && (\n                            <SortableTable\n                                columns={cityColumns}\n                                data={region.cities}\n                                itemsPerPage={10}\n                                withPagination={true}\n                            />\n                        )}\n                    </Tab.Pane>\n                    <Tab.Pane eventKey=\"league\">\n                        {region && (\n                            <RegionLeague\n                                champion={region.champion}\n                                eliteFour={region.eliteFour}\n                                gymLeaders={region.gymLeaders}\n                            />\n                        )}\n                    </Tab.Pane>\n                    <Tab.Pane eventKey=\"map\">\n                        {region && <RegionMap regionName={region.name} cities={region.cities} />}\n                    </Tab.Pane>\n                </Tab.Content>\n            </Tab.Container>\n        </Container>\n    );\n};\n\nexport default RegionDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}