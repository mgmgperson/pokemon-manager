{"ast":null,"code":"var _jsxFileName = \"/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/RegionDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SortableTable from './SortableTable';\nimport { Pagination } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegionDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [region, setRegion] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const citiesPerPage = 10;\n  useEffect(() => {\n    const fetchRegion = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/regions/${id}`);\n        setRegion(response.data.data);\n      } catch (error) {\n        console.error('Error fetching region:', error);\n      }\n    };\n    fetchRegion();\n  }, [id]);\n  if (!region) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n  const columns = [{\n    key: 'name',\n    label: 'City Name'\n  }, {\n    key: 'population',\n    label: 'Population'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: region.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Population: \", region.population.toLocaleString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cities\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SortableTable, {\n      columns: columns,\n      data: region.cities,\n      currentPage: currentPage,\n      itemsPerPage: citiesPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      children: [/*#__PURE__*/_jsxDEV(Pagination.First, {\n        onClick: () => setCurrentPage(1),\n        disabled: currentPage === 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pagination.Prev, {\n        onClick: () => setCurrentPage(currentPage - 1),\n        disabled: currentPage === 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), [...Array(totalPages)].map((_, i) => /*#__PURE__*/_jsxDEV(Pagination.Item, {\n        active: i + 1 === currentPage,\n        onClick: () => setCurrentPage(i + 1),\n        children: i + 1\n      }, i + 1, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Pagination.Next, {\n        onClick: () => setCurrentPage(currentPage + 1),\n        disabled: currentPage === totalPages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Pagination.Last, {\n        onClick: () => setCurrentPage(totalPages),\n        disabled: currentPage === totalPages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(RegionDetail, \"VE8uXNRGNbz2i2bsu0PsbrvwAJk=\", false, function () {\n  return [useParams];\n});\n_c = RegionDetail;\nexport default RegionDetail;\nvar _c;\n$RefreshReg$(_c, \"RegionDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","SortableTable","Pagination","jsxDEV","_jsxDEV","RegionDetail","_s","id","region","setRegion","currentPage","setCurrentPage","citiesPerPage","fetchRegion","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","columns","key","label","name","population","toLocaleString","cities","itemsPerPage","First","onClick","disabled","Prev","Array","totalPages","map","_","i","Item","active","Next","Last","_c","$RefreshReg$"],"sources":["/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/RegionDetail.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport SortableTable from './SortableTable';\nimport { Pagination } from 'react-bootstrap';\n\ninterface City {\n    name: string;\n    population: number;\n}\n\ninterface Region {\n    name: string;\n    population: number;\n    cities: City[];\n}\n\nconst RegionDetail: React.FC = () => {\n    const { id } = useParams<{ id: string }>();\n    const [region, setRegion] = useState<Region | null>(null);\n    const [currentPage, setCurrentPage] = useState<number>(1);\n    const citiesPerPage = 10;\n\n    useEffect(() => {\n        const fetchRegion = async () => {\n            try {\n                const response = await axios.get(`http://localhost:5000/regions/${id}`);\n                setRegion(response.data.data);\n            } catch (error) {\n                console.error('Error fetching region:', error);\n            }\n        };\n\n        fetchRegion();\n    }, [id]);\n\n    if (!region) {\n        return <div>Loading...</div>;\n    }\n\n    const columns: Array<{ key: keyof City, label: string, render?: (item: City) => React.ReactNode }> = [\n        { key: 'name', label: 'City Name' },\n        { key: 'population', label: 'Population' },\n    ];\n\n    return (\n        <div>\n            <h1>{region.name}</h1>\n            <p>Population: {region.population.toLocaleString()}</p>\n            <h2>Cities</h2>\n            <SortableTable \n                columns={columns} \n                data={region.cities} \n                currentPage={currentPage}\n                itemsPerPage={citiesPerPage}\n            />\n            <Pagination>\n                <Pagination.First onClick={() => setCurrentPage(1)} disabled={currentPage === 1} />\n                <Pagination.Prev onClick={() => setCurrentPage(currentPage - 1)} disabled={currentPage === 1} />\n                {[...Array(totalPages)].map((_, i) => (\n                    <Pagination.Item key={i + 1} active={i + 1 === currentPage} onClick={() => setCurrentPage(i + 1)}>\n                        {i + 1}\n                    </Pagination.Item>\n                ))}\n                <Pagination.Next onClick={() => setCurrentPage(currentPage + 1)} disabled={currentPage === totalPages} />\n                <Pagination.Last onClick={() => setCurrentPage(totalPages)} disabled={currentPage === totalPages} />\n            </Pagination>\n        </div>\n    );\n};\n\nexport default RegionDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}