{"ast":null,"code":"var _jsxFileName = \"/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/pokedex/PokemonDetail.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Container, Tabs, Tab } from 'react-bootstrap';\nimport PokemonBasicInfo from './PokemonBasicInfo';\nimport PokemonLearnset from './PokemonLearnset'; // The second tab, currently blank\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PokemonDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [pokemonForm, setPokemonForm] = useState(null);\n  const [pokemonSpecies, setPokemonSpecies] = useState(null);\n  useEffect(() => {\n    const fetchPokemonForm = async () => {\n      try {\n        const formResponse = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}/`);\n        const formData = formResponse.data;\n\n        // Fetch species data using the species URL\n        const speciesResponse = await axios.get(formData.species.url);\n        const speciesData = speciesResponse.data;\n\n        // Extract relevant data for species\n        const nationalDexNumber = speciesData.pokedex_numbers.find(entry => entry.pokedex.name === 'national').entry_number;\n        const generation = speciesData.generation.name.replace('generation-', 'Generation ').toUpperCase();\n        const genus = speciesData.genera.find(entry => entry.language.name === 'en').genus;\n        const varieties = speciesData.varieties;\n        const evolutionChainUrl = speciesData.evolution_chain.url;\n        setPokemonForm({\n          id: formData.id,\n          name: formData.name,\n          abilities: formData.abilities.map(ability => ({\n            name: ability.ability.name,\n            is_hidden: ability.is_hidden\n          })),\n          height: formData.height / 10,\n          weight: formData.weight / 10,\n          stats: formData.stats.map(stat => ({\n            name: stat.stat.name,\n            base_stat: stat.base_stat,\n            effort: stat.effort\n          })),\n          types: formData.types.map(type => ({\n            name: type.type.name\n          })),\n          base_experience: formData.base_experience\n        });\n\n        //evolution chain data\n        const evolutionResponse = await axios.get(evolutionChainUrl);\n        const evolutionChain = evolutionResponse.data.chain;\n\n        // Set pokemonSpecies state\n        setPokemonSpecies({\n          name: speciesData.name,\n          nationalDexNumber,\n          generation,\n          genus,\n          varieties,\n          evolution_chain: evolutionChain,\n          capture_rate: speciesData.capture_rate,\n          base_happiness: speciesData.base_happiness,\n          growth_rate: speciesData.growth_rate,\n          egg_groups: speciesData.egg_groups,\n          gender_rate: speciesData.gender_rate,\n          hatch_counter: speciesData.hatch_counter\n        });\n      } catch (error) {\n        console.error('Error fetching PokÃ©mon details:', error);\n      }\n    };\n    fetchPokemonForm();\n  }, [id]);\n  if (!pokemonForm || !pokemonSpecies) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [pokemonSpecies.name.charAt(0).toUpperCase() + pokemonSpecies.name.slice(1), \" - #\", String(pokemonSpecies.nationalDexNumber).padStart(3, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [pokemonSpecies.generation, \" - \", pokemonSpecies.genus]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      defaultActiveKey: \"info\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"info\",\n        title: \"Info\",\n        children: /*#__PURE__*/_jsxDEV(PokemonBasicInfo, {\n          form: pokemonForm,\n          species: pokemonSpecies\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Tab, {\n        eventKey: \"learnset\",\n        title: \"Learnset\",\n        children: /*#__PURE__*/_jsxDEV(PokemonLearnset, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n};\n_s(PokemonDetail, \"Ph23+shQ6TQQv6+xrV3VVW+doTE=\", false, function () {\n  return [useParams];\n});\n_c = PokemonDetail;\nexport default PokemonDetail;\nvar _c;\n$RefreshReg$(_c, \"PokemonDetail\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","Container","Tabs","Tab","PokemonBasicInfo","PokemonLearnset","jsxDEV","_jsxDEV","PokemonDetail","_s","id","pokemonForm","setPokemonForm","pokemonSpecies","setPokemonSpecies","fetchPokemonForm","formResponse","get","formData","data","speciesResponse","species","url","speciesData","nationalDexNumber","pokedex_numbers","find","entry","pokedex","name","entry_number","generation","replace","toUpperCase","genus","genera","language","varieties","evolutionChainUrl","evolution_chain","abilities","map","ability","is_hidden","height","weight","stats","stat","base_stat","effort","types","type","base_experience","evolutionResponse","evolutionChain","chain","capture_rate","base_happiness","growth_rate","egg_groups","gender_rate","hatch_counter","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","slice","String","padStart","defaultActiveKey","className","eventKey","title","form","_c","$RefreshReg$"],"sources":["/Users/alin/Documents/Saves/idiot-2/idiot/Project-Pokemon/frontend/src/components/pokedex/PokemonDetail.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { Container, Tabs, Tab } from 'react-bootstrap';\nimport PokemonBasicInfo from './PokemonBasicInfo';\nimport PokemonLearnset from './PokemonLearnset'; // The second tab, currently blank\n\ninterface Ability {\n    name: string;\n    is_hidden: boolean;\n}\n\ninterface Stat {\n    name: string;\n    base_stat: number;\n    effort: number; // Adding effort for EV yield\n}\n\ninterface Type {\n    name: string;\n}\n\ninterface PokemonForm {\n    id: number;\n    name: string;\n    abilities: Ability[];\n    height: number;\n    weight: number;\n    stats: Stat[];\n    types: Type[];\n    base_experience: number; // Add base_experience here\n}\n\ninterface PokemonSpecies {\n    name: string;\n    nationalDexNumber: number;\n    generation: string;\n    genus: string;\n    varieties: any[];\n    evolution_chain: EvolutionChainLink;\n    capture_rate: number; // Add capture_rate here\n    base_happiness: number; // Add base_happiness here\n    growth_rate: {\n        name: string;\n    }; // Add growth_rate here\n    egg_groups: {\n        name: string;\n    }[]; // Add egg_groups here\n    gender_rate: number; // Add gender_rate here\n    hatch_counter: number; // Add hatch_counter here\n}\n\ninterface EvolutionChainLink {\n    species: {\n        name: string;\n        url: string;\n    };\n    evolves_to: EvolutionChainLink[];\n}\n\n\n\nconst PokemonDetail: React.FC = () => {\n    const { id } = useParams<{ id: string }>();\n    const [pokemonForm, setPokemonForm] = useState<PokemonForm | null>(null);\n    const [pokemonSpecies, setPokemonSpecies] = useState<PokemonSpecies | null>(null);\n\n    useEffect(() => {\n        const fetchPokemonForm = async () => {\n            try {\n                const formResponse = await axios.get(`https://pokeapi.co/api/v2/pokemon/${id}/`);\n                const formData = formResponse.data;\n        \n                // Fetch species data using the species URL\n                const speciesResponse = await axios.get(formData.species.url);\n                const speciesData = speciesResponse.data;\n        \n                // Extract relevant data for species\n                const nationalDexNumber = speciesData.pokedex_numbers.find((entry: any) => entry.pokedex.name === 'national').entry_number;\n                const generation = speciesData.generation.name.replace('generation-', 'Generation ').toUpperCase();\n                const genus = speciesData.genera.find((entry: any) => entry.language.name === 'en').genus;\n                const varieties = speciesData.varieties;\n                const evolutionChainUrl = speciesData.evolution_chain.url;\n        \n                \n                setPokemonForm({\n                    id: formData.id,\n                    name: formData.name,\n                    abilities: formData.abilities.map((ability: any) => ({\n                        name: ability.ability.name,\n                        is_hidden: ability.is_hidden,\n                    })),\n                    height: formData.height / 10, \n                    weight: formData.weight / 10, \n                    stats: formData.stats.map((stat: any) => ({\n                        name: stat.stat.name,\n                        base_stat: stat.base_stat,\n                        effort: stat.effort, \n                    })),\n                    types: formData.types.map((type: any) => ({\n                        name: type.type.name,\n                    })),\n                    base_experience: formData.base_experience, \n                });\n        \n                //evolution chain data\n                const evolutionResponse = await axios.get(evolutionChainUrl);\n                const evolutionChain = evolutionResponse.data.chain;\n        \n                // Set pokemonSpecies state\n                setPokemonSpecies({\n                    name: speciesData.name,\n                    nationalDexNumber,\n                    generation,\n                    genus,\n                    varieties,\n                    evolution_chain: evolutionChain,\n                    capture_rate: speciesData.capture_rate, \n                    base_happiness: speciesData.base_happiness, \n                    growth_rate: speciesData.growth_rate, \n                    egg_groups: speciesData.egg_groups, \n                    gender_rate: speciesData.gender_rate,\n                    hatch_counter: speciesData.hatch_counter, \n                });\n            } catch (error) {\n                console.error('Error fetching PokÃ©mon details:', error);\n            }\n        };\n        \n\n        fetchPokemonForm();\n    }, [id]);\n\n    if (!pokemonForm || !pokemonSpecies) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <Container>\n            <h1>\n                {pokemonSpecies.name.charAt(0).toUpperCase() + pokemonSpecies.name.slice(1)} - #{String(pokemonSpecies.nationalDexNumber).padStart(3, '0')}\n            </h1>\n            <p>\n                {pokemonSpecies.generation} - {pokemonSpecies.genus}\n            </p>\n\n            <Tabs defaultActiveKey=\"info\" className=\"mb-3\">\n                <Tab eventKey=\"info\" title=\"Info\">\n                    <PokemonBasicInfo form={pokemonForm} species={pokemonSpecies} />\n                </Tab>\n                <Tab eventKey=\"learnset\" title=\"Learnset\">\n                    <PokemonLearnset />\n                </Tab>\n            </Tabs>\n        </Container>\n    );\n};\n\nexport default PokemonDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}